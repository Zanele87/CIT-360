<?xml version="1.0" encoding="UTF-8"?><!--
        *** GENERATED FROM project.xml - DO NOT EDIT  ***
        ***         EDIT ../build.xml INSTEAD         ***

        For the purpose of easier reading the script
        is divided into following sections:
        - initialization
        - compilation
        - dist
        - execution
        - debugging
        - javadoc
        - test compilation
        - test execution
        - test debugging
        - cleanup

        -->
<project xmlns:webproject1="http://www.netbeans.org/ns/web-project/1"
    xmlns:webproject2="http://www.netbeans.org/ns/web-project/2" name="Servlet-impl" basedir=".."
    default="default">
    <import file="ant-deploy.xml" />
    <fail message="Please build using Ant 1.7.1 or higher.">
        <condition>
            <not>
                <antversion atleast="1.7.1" />
            </not>
        </condition>
    </fail>
    <target name="default" depends="dist,javadoc" description="Build whole project." />
    <!--
                INITIALIZATION SECTION
            -->
    <target name="-pre-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-init-private" depends="-pre-init">
        <property file="nbproject/private/private.properties" />
    </target>
    <target name="-init-user" depends="-pre-init,-init-private">
        <property file="${user.properties.file}" />
        <!-- The two properties below are usually overridden -->
        <!-- by the active platform. Just a fallback. -->
        <property name="default.javac.source" value="1.4" />
        <property name="default.javac.target" value="1.4" />
    </target>
    <target name="-init-project" depends="-pre-init,-init-private,-init-user">
        <property file="nbproject/project.properties" />
    </target>
    <target name="-do-ear-init"
        depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property"
        if="dist.ear.dir" />
    <target name="-do-init"
        depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property">
        <condition property="have.tests">
            <or>
                <available file="${test.src.dir}" />
            </or>
        </condition>
        <condition property="have.sources">
            <or>
                <available file="${src.dir}" />
            </or>
        </condition>
        <condition property="netbeans.home+have.tests">
            <and>
                <isset property="netbeans.home" />
                <isset property="have.tests" />
            </and>
        </condition>
        <condition property="no.javadoc.preview">
            <isfalse value="${javadoc.preview}" />
        </condition>
        <property name="javac.compilerargs" value="" />
        <condition property="no.deps">
            <and>
                <istrue value="${no.dependencies}" />
            </and>
        </condition>
        <condition property="no.dist.ear.dir">
            <not>
                <isset property="dist.ear.dir" />
            </not>
        </condition>
        <property name="build.web.excludes" value="${build.classes.excludes}" />
        <condition property="do.compile.jsps">
            <istrue value="${compile.jsps}" />
        </condition>
        <condition property="do.debug.server">
            <or>
                <not>
                    <isset property="debug.server" />
                </not>
                <istrue value="${debug.server}" />
                <and>
                    <not>
                        <istrue value="${debug.server}" />
                    </not>
                    <not>
                        <istrue value="${debug.client}" />
                    </not>
                </and>
            </or>
        </condition>
        <condition property="do.debug.client">
            <istrue value="${debug.client}" />
        </condition>
        <condition property="do.display.browser">
            <istrue value="${display.browser}" />
        </condition>
        <condition property="do.display.browser.debug.old">
            <and>
                <isset property="do.display.browser" />
                <not>
                    <isset property="do.debug.client" />
                </not>
                <not>
                    <isset property="browser.context" />
                </not>
            </and>
        </condition>
        <condition property="do.display.browser.debug">
            <and>
                <isset property="do.display.browser" />
                <not>
                    <isset property="do.debug.client" />
                </not>
                <isset property="browser.context" />
            </and>
        </condition>
        <available file="${conf.dir}/MANIFEST.MF" property="has.custom.manifest" />
        <available file="${persistence.xml.dir}/persistence.xml" property="has.persistence.xml" />
        <condition property="do.war.package.with.custom.manifest">
            <isset property="has.custom.manifest" />
        </condition>
        <condition property="do.war.package.without.custom.manifest">
            <not>
                <isset property="has.custom.manifest" />
            </not>
        </condition>
        <condition property="do.tmp.war.package.with.custom.manifest">
            <and>
                <isset property="has.custom.manifest" />
                <or>
                    <isfalse value="${directory.deployment.supported}" />
                    <isset property="dist.ear.dir" />
                </or>
            </and>
        </condition>
        <condition property="do.tmp.war.package.without.custom.manifest">
            <and>
                <not>
                    <isset property="has.custom.manifest" />
                </not>
                <or>
                    <isfalse value="${directory.deployment.supported}" />
                    <isset property="dist.ear.dir" />
                </or>
            </and>
        </condition>
        <condition property="do.tmp.war.package">
            <or>
                <isfalse value="${directory.deployment.supported}" />
                <isset property="dist.ear.dir" />
            </or>
        </condition>
        <property name="build.meta.inf.dir" value="${build.web.dir}/META-INF" />
        <condition else="" property="application.args.param" value="${application.args}">
            <and>
                <isset property="application.args" />
                <not>
                    <equals arg1="${application.args}" arg2="" trim="true" />
                </not>
            </and>
        </condition>
        <property name="source.encoding" value="${file.encoding}" />
        <condition property="javadoc.encoding.used" value="${javadoc.encoding}">
            <and>
                <isset property="javadoc.encoding" />
                <not>
                    <equals arg1="${javadoc.encoding}" arg2="" />
                </not>
            </and>
        </condition>
        <property name="javadoc.encoding.used" value="${source.encoding}" />
        <property name="includes" value="**" />
        <property name="excludes" value="" />
        <property name="runmain.jvmargs" value="" />
        <path id="endorsed.classpath.path" path="${endorsed.classpath}" />
        <condition else="" property="endorsed.classpath.cmd.line.arg"
            value="-Xbootclasspath/p:'${toString:endorsed.classpath.path}'">
            <and>
                <isset property="endorsed.classpath" />
                <length length="0" string="${endorsed.classpath}" when="greater" />
            </and>
        </condition>
        <condition else="false" property="jdkBug6558476">
            <and>
                <matches pattern="1\.[56]" string="${java.specification.version}" />
                <not>
                    <os family="unix" />
                </not>
            </and>
        </condition>
        <property name="javac.fork" value="${jdkBug6558476}" />
        <condition property="junit.available">
            <or>
                <available classname="org.junit.Test" classpath="${run.test.classpath}" />
                <available classname="junit.framework.Test" classpath="${run.test.classpath}" />
            </or>
        </condition>
        <condition property="testng.available">
            <available classname="org.testng.annotations.Test" classpath="${run.test.classpath}" />
        </condition>
        <condition property="junit+testng.available">
            <and>
                <istrue value="${junit.available}" />
                <istrue value="${testng.available}" />
            </and>
        </condition>
        <condition else="testng" property="testng.mode" value="mixed">
            <istrue value="${junit+testng.available}" />
        </condition>
        <condition else="" property="testng.debug.mode" value="-mixed">
            <istrue value="${junit+testng.available}" />
        </condition>
    </target>
    <target name="-init-cos" depends="init" unless="deploy.on.save">
        <condition property="deploy.on.save" value="true">
            <or>
                <istrue value="${j2ee.deploy.on.save}" />
                <istrue value="${j2ee.compile.on.save}" />
            </or>
        </condition>
    </target>
    <target name="-post-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-init-check" depends="-pre-init,-init-private,-init-user,-init-project,-do-init">
        <fail unless="src.dir">Must set src.dir</fail>
        <fail unless="test.src.dir">Must set test.src.dir</fail>
        <fail unless="build.dir">Must set build.dir</fail>
        <fail unless="build.web.dir">Must set build.web.dir</fail>
        <fail unless="build.generated.dir">Must set build.generated.dir</fail>
        <fail unless="dist.dir">Must set dist.dir</fail>
        <fail unless="build.classes.dir">Must set build.classes.dir</fail>
        <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
        <fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>
        <fail unless="build.test.results.dir">Must set build.test.results.dir</fail>
        <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
        <fail unless="dist.war">Must set dist.war</fail>
        <condition property="missing.j2ee.server.home">
            <and>
                <matches pattern="j2ee.server.home" string="${j2ee.platform.classpath}" />
                <not>
                    <isset property="j2ee.server.home" />
                </not>
            </and>
        </condition>
        <fail if="missing.j2ee.server.home">
            The Java EE server classpath is not correctly set up - server home directory is missing.
            Either open the project in the IDE and assign the server or setup the server classpath
            manually.
            For example like this:
            ant -Dj2ee.server.home=&lt;app_server_installation_directory&gt;
        </fail>
        <fail unless="j2ee.platform.classpath">
            The Java EE server classpath is not correctly set up. Your active server type is
            ${j2ee.server.type}.
            Either open the project in the IDE and assign the server or setup the server classpath
            manually.
            For example like this:
            ant -Duser.properties.file=&lt;path_to_property_file&gt; (where you put the property
            "j2ee.platform.classpath" in a .properties file)
            or ant -Dj2ee.platform.classpath=&lt;server_classpath&gt; (where no properties file is
            used)
        </fail>
    </target>
    <target name="-init-macrodef-property">
        <macrodef name="property" uri="http://www.netbeans.org/ns/web-project/1">
            <attribute name="name" />
            <attribute name="value" />
            <sequential>
                <property name="@{name}" value="${@{value}}" />
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-javac-with-processors" depends="-init-ap-cmdline-properties"
        if="ap.supported.internal">
        <macrodef name="javac" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="srcdir" default="${src.dir}" />
            <attribute name="destdir" default="${build.classes.dir}" />
            <attribute name="classpath" default="${javac.classpath}:${j2ee.platform.classpath}" />
            <attribute name="processorpath" default="${javac.processorpath}" />
            <attribute name="apgeneratedsrcdir"
                default="${build.generated.sources.dir}/ap-source-output" />
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="debug" default="${javac.debug}" />
            <attribute name="gensrcdir" default="${empty.dir}" />
            <element name="customize" optional="true" />
            <sequential>
                <property name="empty.dir" location="${build.dir}/empty" />
                <mkdir dir="${empty.dir}" />
                <mkdir dir="@{apgeneratedsrcdir}" />
                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}"
                    encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}"
                    includeantruntime="false" includes="@{includes}" source="${javac.source}"
                    srcdir="@{srcdir}" target="${javac.target}">
                    <src>
                        <dirset dir="@{gensrcdir}" erroronmissingdir="false">
                            <include name="*" />
                        </dirset>
                    </src>
                    <classpath>
                        <path path="@{classpath}" />
                    </classpath>
                    <compilerarg line="${endorsed.classpath.cmd.line.arg}" />
                    <compilerarg line="${javac.compilerargs}" />
                    <compilerarg value="-processorpath" />
                    <compilerarg path="@{processorpath}:${empty.dir}" />
                    <compilerarg line="${ap.processors.internal}" />
                    <compilerarg value="-s" />
                    <compilerarg path="@{apgeneratedsrcdir}" />
                    <compilerarg line="${ap.proc.none.internal}" />
                    <customize />
                </javac>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-javac-without-processors" depends="-init-ap-cmdline-properties"
        unless="ap.supported.internal">
        <macrodef name="javac" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="srcdir" default="${src.dir}" />
            <attribute name="destdir" default="${build.classes.dir}" />
            <attribute name="classpath" default="${javac.classpath}:${j2ee.platform.classpath}" />
            <attribute name="processorpath" default="${javac.processorpath}" />
            <attribute name="apgeneratedsrcdir"
                default="${build.generated.sources.dir}/ap-source-output" />
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="debug" default="${javac.debug}" />
            <attribute name="gensrcdir" default="${empty.dir}" />
            <element name="customize" optional="true" />
            <sequential>
                <property name="empty.dir" location="${build.dir}/empty" />
                <mkdir dir="${empty.dir}" />
                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}"
                    encoding="${source.encoding}" excludes="@{excludes}" includeantruntime="false"
                    includes="@{includes}" source="${javac.source}" srcdir="@{srcdir}"
                    target="${javac.target}">
                    <src>
                        <dirset dir="@{gensrcdir}" erroronmissingdir="false">
                            <include name="*" />
                        </dirset>
                    </src>
                    <classpath>
                        <path path="@{classpath}" />
                    </classpath>
                    <compilerarg line="${endorsed.classpath.cmd.line.arg}" />
                    <compilerarg line="${javac.compilerargs}" />
                    <customize />
                </javac>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-javac"
        depends="-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors">
        <macrodef name="depend" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="srcdir" default="${src.dir}" />
            <attribute name="destdir" default="${build.classes.dir}" />
            <attribute name="classpath" default="${javac.classpath}:${j2ee.platform.classpath}" />
            <sequential>
                <depend cache="${build.dir}/depcache" destdir="@{destdir}" excludes="${excludes}"
                    includes="${includes}" srcdir="@{srcdir}">
                    <classpath>
                        <path path="@{classpath}" />
                    </classpath>
                </depend>
            </sequential>
        </macrodef>
        <macrodef name="force-recompile" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="destdir" default="${build.classes.dir}" />
            <sequential>
                <fail unless="javac.includes">Must set javac.includes</fail>
                <pathconvert pathsep="${line.separator}" property="javac.includes.binary">
                    <path>
                        <filelist dir="@{destdir}" files="${javac.includes}" />
                    </path>
                    <globmapper from="*.java" to="*.class" />
                </pathconvert>
                <tempfile deleteonexit="true" property="javac.includesfile.binary" />
                <echo file="${javac.includesfile.binary}" message="${javac.includes.binary}" />
                <delete>
                    <files includesfile="${javac.includesfile.binary}" />
                </delete>
                <delete file="${javac.includesfile.binary}" />
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit-init" if="${junit.available}">
        <condition else="false" property="nb.junit.batch" value="true">
            <and>
                <istrue value="${junit.available}" />
                <not>
                    <isset property="test.method" />
                </not>
            </and>
        </condition>
        <condition else="false" property="nb.junit.single" value="true">
            <and>
                <istrue value="${junit.available}" />
                <isset property="test.method" />
            </and>
        </condition>
    </target>
    <target name="-init-test-properties">
        <property name="test.binaryincludes" value="&lt;nothing&gt;" />
        <property name="test.binarytestincludes" value="" />
        <property name="test.binaryexcludes" value="" />
    </target>
    <target name="-init-macrodef-junit-single" if="${nb.junit.single}" unless="${nb.junit.batch}">
        <macrodef name="junit" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" optional="true" />
            <sequential>
                <junit dir="${basedir}" errorproperty="tests.failed" failureproperty="tests.failed"
                    fork="true" showoutput="true" tempdir="${java.io.tmpdir}">
                    <test name="@{testincludes}" methods="@{testmethods}"
                        todir="${build.test.results.dir}" />
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop." />
                        <mapper from="test-sys-prop.*" to="*" type="glob" />
                    </syspropertyset>
                    <formatter type="brief" usefile="false" />
                    <formatter type="xml" />
                    <jvmarg value="-ea" />
                    <customize />
                </junit>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit-batch" depends="-init-test-properties" if="${nb.junit.batch}"
        unless="${nb.junit.single}">
        <macrodef name="junit" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" optional="true" />
            <sequential>
                <property name="run.jvmargs.ide" value="" />
                <junit dir="${basedir}" errorproperty="tests.failed" failureproperty="tests.failed"
                    fork="true" showoutput="true" tempdir="${build.dir}">
                    <batchtest todir="${build.test.results.dir}">
                        <fileset dir="${test.src.dir}" excludes="@{excludes},${excludes}"
                            includes="@{includes}">
                            <filename name="@{testincludes}" />
                        </fileset>
                        <fileset dir="${build.test.classes.dir}"
                            excludes="@{excludes},${excludes},${test.binaryexcludes}"
                            includes="${test.binaryincludes}">
                            <filename name="${test.binarytestincludes}" />
                        </fileset>
                    </batchtest>
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop." />
                        <mapper from="test-sys-prop.*" to="*" type="glob" />
                    </syspropertyset>
                    <formatter type="brief" usefile="false" />
                    <formatter type="xml" />
                    <jvmarg value="-ea" />
                    <jvmarg line="${run.jvmargs.ide}" />
                    <customize />
                </junit>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit"
        depends="-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch"
        if="${junit.available}" />
    <target name="-init-macrodef-testng" if="${testng.available}">
        <macrodef name="testng" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" optional="true" />
            <sequential>
                <condition else="" property="testng.methods.arg"
                    value="@{testincludes}.@{testmethods}">
                    <isset property="test.method" />
                </condition>
                <union id="test.set">
                    <fileset dir="${test.src.dir}" excludes="@{excludes},**/*.xml,${excludes}"
                        includes="@{includes}">
                        <filename name="@{testincludes}" />
                    </fileset>
                </union>
                <taskdef name="testng" classname="org.testng.TestNGAntTask"
                    classpath="${run.test.classpath}" />
                <testng classfilesetref="test.set" failureProperty="tests.failed"
                    listeners="org.testng.reporters.VerboseReporter" methods="${testng.methods.arg}"
                    mode="${testng.mode}" outputdir="${build.test.results.dir}" suitename="Servlet"
                    testname="TestNG tests" workingDir="${basedir}">
                    <xmlfileset dir="${build.test.classes.dir}" includes="@{testincludes}" />
                    <propertyset>
                        <propertyref prefix="test-sys-prop." />
                        <mapper from="test-sys-prop.*" to="*" type="glob" />
                    </propertyset>
                    <customize />
                </testng>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-test-impl">
        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" implicit="true" optional="true" />
            <sequential>
                <echo>No tests executed.</echo>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit-impl" depends="-init-macrodef-junit" if="${junit.available}">
        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" implicit="true" optional="true" />
            <sequential>
                <webproject2:junit excludes="@{excludes}" includes="@{includes}"
                    testincludes="@{testincludes}" testmethods="@{testmethods}">
                    <customize />
                </webproject2:junit>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-testng-impl" depends="-init-macrodef-testng"
        if="${testng.available}">
        <macrodef name="test-impl" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" implicit="true" optional="true" />
            <sequential>
                <webproject2:testng excludes="@{excludes}" includes="@{includes}"
                    testincludes="@{testincludes}" testmethods="@{testmethods}">
                    <customize />
                </webproject2:testng>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-test"
        depends="-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl">
        <macrodef name="test" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <sequential>
                <webproject2:test-impl excludes="@{excludes}" includes="@{includes}"
                    testincludes="@{testincludes}" testmethods="@{testmethods}">
                    <customize>
                        <classpath>
                            <path
                                path="${run.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}" />
                        </classpath>
                        <jvmarg line="${endorsed.classpath.cmd.line.arg}" />
                        <jvmarg line="${runmain.jvmargs}" />
                    </customize>
                </webproject2:test-impl>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit-debug" if="${junit.available}" unless="${nb.junit.batch}">
        <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" optional="true" />
            <sequential>
                <junit dir="${basedir}" errorproperty="tests.failed" failureproperty="tests.failed"
                    fork="true" showoutput="true" tempdir="${java.io.tmpdir}">
                    <test name="@{testincludes}" methods="@{testmethods}"
                        todir="${build.test.results.dir}" />
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop." />
                        <mapper from="test-sys-prop.*" to="*" type="glob" />
                    </syspropertyset>
                    <formatter type="brief" usefile="false" />
                    <formatter type="xml" />
                    <jvmarg value="-ea" />
                    <jvmarg line="${debug-args-line}" />
                    <jvmarg
                        value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}" />
                    <customize />
                </junit>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit-debug-batch" depends="-init-test-properties"
        if="${nb.junit.batch}">
        <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" optional="true" />
            <sequential>
                <property name="run.jvmargs.ide" value="" />
                <junit dir="${basedir}" errorproperty="tests.failed" failureproperty="tests.failed"
                    fork="true" showoutput="true" tempdir="${build.dir}">
                    <batchtest todir="${build.test.results.dir}">
                        <fileset dir="${test.src.dir}" excludes="@{excludes},${excludes}"
                            includes="@{includes}">
                            <filename name="@{testincludes}" />
                        </fileset>
                        <fileset dir="${build.test.classes.dir}"
                            excludes="@{excludes},${excludes},${test.binaryexcludes}"
                            includes="${test.binaryincludes}">
                            <filename name="${test.binarytestincludes}" />
                        </fileset>
                    </batchtest>
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop." />
                        <mapper from="test-sys-prop.*" to="*" type="glob" />
                    </syspropertyset>
                    <formatter type="brief" usefile="false" />
                    <formatter type="xml" />
                    <jvmarg value="-ea" />
                    <jvmarg line="${run.jvmargs.ide}" />
                    <jvmarg line="${debug-args-line}" />
                    <jvmarg
                        value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}" />
                    <customize />
                </junit>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit-debug-impl"
        depends="-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch"
        if="${junit.available}">
        <macrodef name="test-debug-impl" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <element name="customize" implicit="true" optional="true" />
            <sequential>
                <webproject2:junit-debug excludes="@{excludes}" includes="@{includes}"
                    testincludes="@{testincludes}" testmethods="@{testmethods}">
                    <customize />
                </webproject2:junit-debug>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-testng-debug" if="${testng.available}">
        <macrodef name="testng-debug" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="testClass" default="${main.class}" />
            <attribute name="testMethod" default="" />
            <element name="customize2" optional="true" />
            <sequential>
                <condition else="-testclass @{testClass}" property="test.class.or.method"
                    value="-methods @{testClass}.@{testMethod}">
                    <isset property="test.method" />
                </condition>
                <condition else="-suitename Servlet -testname @{testClass} ${test.class.or.method}"
                    property="testng.cmd.args" value="@{testClass}">
                    <matches pattern=".*\.xml" string="@{testClass}" />
                </condition>
                <delete dir="${build.test.results.dir}" quiet="true" />
                <mkdir dir="${build.test.results.dir}" />
                <webproject1:debug args="${testng.cmd.args}" classname="org.testng.TestNG"
                    classpath="${debug.test.classpath}:${j2ee.platform.embeddableejb.classpath}">
                    <customize>
                        <customize2 />
                        <jvmarg value="-ea" />
                        <arg line="${testng.debug.mode}" />
                        <arg line="-d ${build.test.results.dir}" />
                        <arg line="-listener org.testng.reporters.VerboseReporter" />
                    </customize>
                </webproject1:debug>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-testng-debug-impl" depends="-init-macrodef-testng-debug"
        if="${testng.available}">
        <macrodef name="testng-debug-impl" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="testClass" default="${main.class}" />
            <attribute name="testMethod" default="" />
            <element name="customize2" implicit="true" optional="true" />
            <sequential>
                <webproject2:testng-debug testClass="@{testClass}" testMethod="@{testMethod}">
                    <customize2 />
                </webproject2:testng-debug>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-test-debug-junit" depends="-init-macrodef-junit-debug-impl"
        if="${junit.available}">
        <macrodef name="test-debug" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <attribute name="testClass" default="${main.class}" />
            <attribute name="testMethod" default="" />
            <sequential>
                <webproject2:test-debug-impl excludes="@{excludes}" includes="@{includes}"
                    testincludes="@{testincludes}" testmethods="@{testmethods}">
                    <customize>
                        <classpath>
                            <path
                                path="${run.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}" />
                        </classpath>
                        <jvmarg line="${endorsed.classpath.cmd.line.arg}" />
                        <jvmarg line="${runmain.jvmargs}" />
                    </customize>
                </webproject2:test-debug-impl>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-test-debug-testng" depends="-init-macrodef-testng-debug-impl"
        if="${testng.available}">
        <macrodef name="test-debug" uri="http://www.netbeans.org/ns/web-project/2">
            <attribute name="includes" default="${includes}" />
            <attribute name="excludes" default="${excludes}" />
            <attribute name="testincludes" default="**" />
            <attribute name="testmethods" default="" />
            <attribute name="testClass" default="${main.class}" />
            <attribute name="testMethod" default="" />
            <sequential>
                <webproject2:testng-debug-impl testClass="@{testClass}" testMethod="@{testMethod}">
                    <customize2>
                        <syspropertyset>
                            <propertyref prefix="test-sys-prop." />
                            <mapper from="test-sys-prop.*" to="*" type="glob" />
                        </syspropertyset>
                    </customize2>
                </webproject2:testng-debug-impl>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-test-debug"
        depends="-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng" />
    <target name="-init-macrodef-java">
        <macrodef name="java" uri="http://www.netbeans.org/ns/web-project/1">
            <attribute name="classname" default="${main.class}" />
            <attribute name="classpath" default="${debug.classpath}" />
            <element name="customize" optional="true" />
            <sequential>
                <java classname="@{classname}" fork="true">
                    <jvmarg line="${endorsed.classpath.cmd.line.arg}" />
                    <jvmarg line="${runmain.jvmargs}" />
                    <classpath>
                        <path path="@{classpath}:${j2ee.platform.classpath}" />
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="run-sys-prop." />
                        <mapper from="run-sys-prop.*" to="*" type="glob" />
                    </syspropertyset>
                    <customize />
                </java>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-nbjsdebug">
        <macrodef name="nbjsdebugstart" uri="http://www.netbeans.org/ns/web-project/1">
            <attribute name="webUrl" default="${client.url}" />
            <sequential>
                <nbjsdebugstart urlPart="${client.urlPart}" webUrl="@{webUrl}" />
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-nbjpda" depends="-init-debug-args">
        <macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/web-project/1">
            <attribute name="name" default="${main.class}" />
            <attribute name="classpath" default="${debug.classpath}:${j2ee.platform.classpath}" />
            <sequential>
                <nbjpdastart name="@{name}" addressproperty="jpda.address"
                    transport="${debug-transport}">
                    <classpath>
                        <path path="@{classpath}" />
                    </classpath>
                </nbjpdastart>
            </sequential>
        </macrodef>
        <macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/web-project/1">
            <attribute name="dir" default="${build.classes.dir}" />
            <sequential>
                <nbjpdareload>
                    <fileset dir="@{dir}" includes="${fix.classes}">
                        <include name="${fix.includes}*.class" />
                    </fileset>
                </nbjpdareload>
            </sequential>
        </macrodef>
        <macrodef name="nbjpdaappreloaded" uri="http://www.netbeans.org/ns/web-project/1">
            <sequential>
                <nbjpdaappreloaded />
            </sequential>
        </macrodef>
    </target>
    <target name="-init-debug-args">
        <property name="version-output" value="java version &quot;${ant.java.version}" />
        <condition property="have-jdk-older-than-1.4">
            <or>
                <contains string="${version-output}" substring="java version &quot;1.0" />
                <contains string="${version-output}" substring="java version &quot;1.1" />
                <contains string="${version-output}" substring="java version &quot;1.2" />
                <contains string="${version-output}" substring="java version &quot;1.3" />
            </or>
        </condition>
        <condition else="-Xdebug" property="debug-args-line"
            value="-Xdebug -Xnoagent -Djava.compiler=none">
            <istrue value="${have-jdk-older-than-1.4}" />
        </condition>
        <condition else="dt_socket" property="debug-transport-by-os" value="dt_shmem">
            <os family="windows" />
        </condition>
        <condition else="${debug-transport-by-os}" property="debug-transport"
            value="${debug.transport}">
            <isset property="debug.transport" />
        </condition>
    </target>
    <target name="-init-macrodef-debug" depends="-init-debug-args">
        <macrodef name="debug" uri="http://www.netbeans.org/ns/web-project/1">
            <attribute name="classname" default="${main.class}" />
            <attribute name="classpath" default="${debug.classpath}:${j2ee.platform.classpath}" />
            <attribute name="args" default="${application.args.param}" />
            <element name="customize" optional="true" />
            <sequential>
                <java classname="@{classname}" fork="true">
                    <jvmarg line="${endorsed.classpath.cmd.line.arg}" />
                    <jvmarg line="${debug-args-line}" />
                    <jvmarg
                        value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}" />
                    <jvmarg line="${runmain.jvmargs}" />
                    <classpath>
                        <path path="@{classpath}" />
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="run-sys-prop." />
                        <mapper from="run-sys-prop.*" to="*" type="glob" />
                    </syspropertyset>
                    <arg line="@{args}" />
                    <customize />
                </java>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-taskdefs">
        <fail unless="libs.CopyLibs.classpath">
            The libs.CopyLibs.classpath property is not set up.
            This property must point to
            org-netbeans-modules-java-j2seproject-copylibstask.jar file which is part
            of NetBeans IDE installation and is usually located at &lt;netbeans_installation&gt;/java&lt;version&gt;/ant/extra
            folder.
            Either open the project in the IDE and make sure CopyLibs library
            exists or setup the property manually. For example like this:
            ant
            -Dlibs.CopyLibs.classpath=a/path/to/org-netbeans-modules-java-j2seproject-copylibstask.jar
        </fail>
        <taskdef classpath="${libs.CopyLibs.classpath}"
            resource="org/netbeans/modules/java/j2seproject/copylibstask/antlib.xml" />
    </target>
    <target name="-init-ap-cmdline-properties">
        <property name="annotation.processing.enabled" value="true" />
        <property name="annotation.processing.processors.list" value="" />
        <property name="annotation.processing.run.all.processors" value="true" />
        <property name="javac.processorpath" value="${javac.classpath}" />
        <property name="javac.test.processorpath" value="${javac.test.classpath}" />
        <condition property="ap.supported.internal" value="true">
            <not>
                <matches pattern="1\.[0-5](\..*)?" string="${javac.source}" />
            </not>
        </condition>
    </target>
    <target name="-init-ap-cmdline-supported" depends="-init-ap-cmdline-properties"
        if="ap.supported.internal">
        <condition else="" property="ap.processors.internal"
            value="-processor ${annotation.processing.processors.list}">
            <isfalse value="${annotation.processing.run.all.processors}" />
        </condition>
        <condition else="" property="ap.proc.none.internal" value="-proc:none">
            <isfalse value="${annotation.processing.enabled}" />
        </condition>
    </target>
    <target name="-init-ap-cmdline"
        depends="-init-ap-cmdline-properties,-init-ap-cmdline-supported">
        <property name="ap.cmd.line.internal" value="" />
    </target>
    <!--
                pre NB7.2 profiling section; consider it deprecated
            -->
    <target name="profile-init"
        depends="-profile-pre-init, init, -profile-post-init, -profile-init-check"
        if="profiler.info.jvmargs.agent" />
    <target name="-profile-pre-init" if="profiler.info.jvmargs.agent">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-profile-post-init" if="profiler.info.jvmargs.agent">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-profile-init-check" depends="-profile-pre-init, init, -profile-post-init"
        if="profiler.info.jvmargs.agent">
        <fail unless="profiler.info.jvm">Must set JVM to use for profiling in profiler.info.jvm
        </fail>
        <fail unless="profiler.info.jvmargs.agent">Must set profiler agent JVM arguments in
            profiler.info.jvmargs.agent
        </fail>
    </target>
    <!--
                end of pre NB7.2 profiling section
            -->
    <target name="init"
        depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-java,-init-macrodef-nbjpda,-init-macrodef-nbjsdebug,-init-macrodef-debug,-init-taskdefs,-init-ap-cmdline" />
    <!--
                COMPILATION SECTION
            -->
    <target name="deps-module-jar" depends="init" if="no.dist.ear.dir" unless="no.deps" />
    <target name="deps-ear-jar" depends="init" if="dist.ear.dir" unless="no.deps" />
    <target name="deps-jar" depends="init, deps-module-jar, deps-ear-jar" unless="no.deps" />
    <target name="-pre-pre-compile" depends="init,deps-jar">
        <mkdir dir="${build.classes.dir}" />
    </target>
    <target name="-pre-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-copy-webdir">
        <copy todir="${build.web.dir}">
            <fileset dir="${web.docbase.dir}" excludes="${build.web.excludes},${excludes}"
                includes="${includes}" />
        </copy>
        <copy todir="${build.web.dir}/WEB-INF">
            <fileset dir="${webinf.dir}" excludes="${build.web.excludes}" />
        </copy>
    </target>
    <target name="-do-compile"
        depends="init, deps-jar, -pre-pre-compile, -pre-compile, -copy-manifest, -copy-persistence-xml, -copy-webdir, library-inclusion-in-archive,library-inclusion-in-manifest"
        if="have.sources">
        <webproject2:javac destdir="${build.classes.dir}"
            gensrcdir="${build.generated.sources.dir}" />
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.dir}" excludes="${build.classes.excludes},${excludes}"
                includes="${includes}" />
        </copy>
    </target>
    <target name="-copy-manifest" if="has.custom.manifest">
        <mkdir dir="${build.meta.inf.dir}" />
        <copy todir="${build.meta.inf.dir}">
            <fileset dir="${conf.dir}" includes="MANIFEST.MF" />
        </copy>
    </target>
    <target name="-copy-persistence-xml" if="has.persistence.xml">
        <mkdir dir="${build.web.dir}/WEB-INF/classes/META-INF" />
        <copy todir="${build.web.dir}/WEB-INF/classes/META-INF">
            <fileset dir="${persistence.xml.dir}" includes="persistence.xml orm.xml" />
        </copy>
    </target>
    <target name="-post-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile"
        depends="init,deps-jar,-pre-pre-compile,-pre-compile,-do-compile,-post-compile"
        description="Compile project." />
    <target name="-pre-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-compile-single" depends="init,deps-jar,-pre-pre-compile">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <webproject2:javac excludes="" gensrcdir="${build.generated.sources.dir}"
            includes="${javac.includes}" />
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.dir}" excludes="${build.classes.excludes},${excludes}"
                includes="${includes}" />
        </copy>
    </target>
    <target name="-post-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile-single"
        depends="init,deps-jar,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single" />
    <property name="jspc.schemas" value="/resources/schemas/" />
    <property name="jspc.dtds" value="/resources/dtds/" />
    <target name="compile-jsps" depends="compile"
        description="Test compile JSP pages to expose compilation errors." if="do.compile.jsps">
        <mkdir dir="${build.generated.dir}/src" />
        <java classname="org.netbeans.modules.web.project.ant.JspC" failonerror="true" fork="true">
            <arg value="-uriroot" />
            <arg file="${basedir}/${build.web.dir}" />
            <arg value="-d" />
            <arg file="${basedir}/${build.generated.dir}/src" />
            <arg value="-die1" />
            <arg value="-schemas ${jspc.schemas}" />
            <arg value="-dtds ${jspc.dtds}" />
            <arg value="-compilerSourceVM ${javac.source}" />
            <arg value="-compilerTargetVM ${javac.target}" />
            <arg value="-javaEncoding ${source.encoding}" />
            <arg value="-sysClasspath ${libs.jsp-compilation-syscp.classpath}" />
            <classpath
                path="${java.home}/../lib/tools.jar:${libs.jsp-compiler.classpath}:${libs.jsp-compilation.classpath}" />
        </java>
        <mkdir dir="${build.generated.dir}/classes" />
        <webproject2:javac
            classpath="${build.classes.dir}:${libs.jsp-compilation.classpath}:${javac.classpath}:${j2ee.platform.classpath}"
            destdir="${build.generated.dir}/classes" srcdir="${build.generated.dir}/src" />
    </target>
    <target name="-do-compile-single-jsp" depends="compile" if="jsp.includes">
        <fail unless="javac.jsp.includes">Must select some files in the IDE or set
            javac.jsp.includes
        </fail>
        <mkdir dir="${build.generated.dir}/src" />
        <java classname="org.netbeans.modules.web.project.ant.JspCSingle" failonerror="true"
            fork="true">
            <arg value="-uriroot" />
            <arg file="${basedir}/${build.web.dir}" />
            <arg value="-d" />
            <arg file="${basedir}/${build.generated.dir}/src" />
            <arg value="-die1" />
            <arg value="-schemas ${jspc.schemas}" />
            <arg value="-dtds ${jspc.dtds}" />
            <arg value="-sysClasspath ${libs.jsp-compilation-syscp.classpath}" />
            <arg value="-jspc.files" />
            <arg path="${jsp.includes}" />
            <arg value="-compilerSourceVM ${javac.source}" />
            <arg value="-compilerTargetVM ${javac.target}" />
            <arg value="-javaEncoding ${source.encoding}" />
            <classpath
                path="${java.home}/../lib/tools.jar:${libs.jsp-compiler.classpath}:${libs.jsp-compilation.classpath}" />
        </java>
        <mkdir dir="${build.generated.dir}/classes" />
        <webproject2:javac
            classpath="${build.classes.dir}:${libs.jsp-compilation.classpath}:${javac.classpath}:${j2ee.platform.classpath}"
            destdir="${build.generated.dir}/classes" srcdir="${build.generated.dir}/src">
            <customize>
                <patternset includes="${javac.jsp.includes}" />
            </customize>
        </webproject2:javac>
    </target>
    <target name="compile-single-jsp">
        <fail unless="jsp.includes">Must select a file in the IDE or set jsp.includes</fail>
        <antcall target="-do-compile-single-jsp" />
    </target>
    <!--
                DIST BUILDING SECTION
            -->
    <target name="-pre-dist">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-dist-without-manifest" depends="init,compile,compile-jsps,-pre-dist"
        if="do.war.package.without.custom.manifest">
        <dirname file="${dist.war}" property="dist.jar.dir" />
        <mkdir dir="${dist.jar.dir}" />
        <jar compress="${jar.compress}" jarfile="${dist.war}">
            <fileset dir="${build.web.dir}"
                excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}" />
        </jar>
    </target>
    <target name="-do-dist-with-manifest" depends="init,compile,compile-jsps,-pre-dist"
        if="do.war.package.with.custom.manifest">
        <dirname file="${dist.war}" property="dist.jar.dir" />
        <mkdir dir="${dist.jar.dir}" />
        <jar compress="${jar.compress}" jarfile="${dist.war}"
            manifest="${build.meta.inf.dir}/MANIFEST.MF">
            <fileset dir="${build.web.dir}"
                excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}" />
        </jar>
    </target>
    <target name="-do-tmp-dist-without-manifest" depends="init,compile,compile-jsps,-pre-dist"
        if="do.tmp.war.package.without.custom.manifest">
        <dirname file="${dist.war}" property="dist.jar.dir" />
        <mkdir dir="${dist.jar.dir}" />
        <jar compress="${jar.compress}" jarfile="${dist.war}">
            <fileset dir="${build.web.dir}"
                excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}" />
        </jar>
    </target>
    <target name="-do-tmp-dist-with-manifest" depends="init,compile,compile-jsps,-pre-dist"
        if="do.tmp.war.package.with.custom.manifest">
        <dirname file="${dist.war}" property="dist.jar.dir" />
        <mkdir dir="${dist.jar.dir}" />
        <jar compress="${jar.compress}" jarfile="${dist.war}"
            manifest="${build.meta.inf.dir}/MANIFEST.MF">
            <fileset dir="${build.web.dir}"
                excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}" />
        </jar>
    </target>
    <target name="do-dist"
        depends="init,compile,compile-jsps,-pre-dist,-do-dist-with-manifest,-do-dist-without-manifest" />
    <target name="library-inclusion-in-manifest" depends="init" if="dist.ear.dir">
        <copyfiles files="${libs.hibernate4-support.classpath}"
            iftldtodir="${build.web.dir}/WEB-INF" todir="${dist.ear.dir}/lib" />
        <copyfiles files="${libs.jpa2-persistence.classpath}" iftldtodir="${build.web.dir}/WEB-INF"
            todir="${dist.ear.dir}/lib" />
        <mkdir dir="${build.web.dir}/META-INF" />
        <manifest file="${build.web.dir}/META-INF/MANIFEST.MF" mode="update" />
    </target>
    <target name="library-inclusion-in-archive" depends="init" unless="dist.ear.dir">
        <copyfiles files="${libs.hibernate4-support.classpath}"
            todir="${build.web.dir}/WEB-INF/lib" />
        <copyfiles files="${libs.jpa2-persistence.classpath}"
            todir="${build.web.dir}/WEB-INF/lib" />
    </target>
    <target name="-clean-webinf-lib" depends="init" if="dist.ear.dir">
        <delete dir="${build.web.dir}/WEB-INF/lib" />
    </target>
    <target name="do-ear-dist"
        depends="init,-clean-webinf-lib,compile,compile-jsps,-pre-dist,library-inclusion-in-manifest"
        if="do.tmp.war.package">
        <dirname file="${dist.ear.war}" property="dist.jar.dir" />
        <mkdir dir="${dist.jar.dir}" />
        <jar compress="${jar.compress}" jarfile="${dist.ear.war}"
            manifest="${build.web.dir}/META-INF/MANIFEST.MF">
            <fileset dir="${build.web.dir}"
                excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}" />
        </jar>
    </target>
    <target name="-post-dist">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="dist" depends="init,compile,-pre-dist,do-dist,-post-dist"
        description="Build distribution (WAR)." />
    <target name="dist-ear"
        depends="init,-clean-webinf-lib,-init-cos,compile,-pre-dist,do-ear-dist,-post-dist"
        description="Build distribution (WAR) to be packaged into an EAR." />
    <!--
                EXECUTION SECTION
            -->
    <target name="run" depends="run-deploy,run-display-browser"
        description="Deploy to server and show in browser." />
    <target name="-pre-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-post-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-pre-nbmodule-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- This target can be overriden by NetBeans modules. Don't override it directly, use -pre-run-deploy task instead. -->
    </target>
    <target name="-post-nbmodule-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- This target can be overriden by NetBeans modules. Don't override it directly, use -post-run-deploy task instead. -->
    </target>
    <target name="-run-deploy-am">
        <!-- Task to deploy to the Access Manager runtime. -->
    </target>
    <target name="run-deploy"
        depends="init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest,-pre-run-deploy,-pre-nbmodule-run-deploy,-run-deploy-nb,-init-deploy-ant,-deploy-ant,-run-deploy-am,-post-nbmodule-run-deploy,-post-run-deploy,-do-update-breakpoints" />
    <target name="-run-deploy-nb" if="netbeans.home">
        <nbdeploy clientUrlPart="${client.urlPart}" debugmode="false"
            forceRedeploy="${forceRedeploy}" />
    </target>
    <target name="-init-deploy-ant" unless="netbeans.home">
        <property name="deploy.ant.archive" value="${dist.war}" />
        <property name="deploy.ant.docbase.dir" value="${web.docbase.dir}" />
        <property name="deploy.ant.resource.dir" value="${resource.dir}" />
        <property name="deploy.ant.enabled" value="true" />
    </target>
    <target name="run-undeploy" depends="dist,-run-undeploy-nb,-init-deploy-ant,-undeploy-ant" />
    <target name="-run-undeploy-nb" if="netbeans.home">
        <fail message="Undeploy is not supported from within the IDE" />
    </target>
    <target name="verify" depends="init,-pre-dist,dist,-post-dist">
        <nbverify file="${dist.war}" />
    </target>
    <target name="run-display-browser"
        depends="run-deploy,-init-display-browser,-display-browser-nb-old,-display-browser-nb,-display-browser-cl" />
    <target name="-init-display-browser" if="do.display.browser">
        <condition property="do.display.browser.nb.old">
            <and>
                <isset property="netbeans.home" />
                <not>
                    <isset property="browser.context" />
                </not>
            </and>
        </condition>
        <condition property="do.display.browser.nb">
            <and>
                <isset property="netbeans.home" />
                <isset property="browser.context" />
            </and>
        </condition>
        <condition property="do.display.browser.cl">
            <isset property="deploy.ant.enabled" />
        </condition>
    </target>
    <target name="-display-browser-nb-old" if="do.display.browser.nb.old">
        <nbbrowse url="${client.url}" />
    </target>
    <target name="-display-browser-nb" if="do.display.browser.nb">
        <nbbrowse context="${browser.context}" url="${client.url}" urlPath="${client.urlPart}" />
    </target>
    <target name="-get-browser" if="do.display.browser.cl" unless="browser">
        <condition property="browser" value="rundll32">
            <os family="windows" />
        </condition>
        <condition else="" property="browser.args" value="url.dll,FileProtocolHandler">
            <os family="windows" />
        </condition>
        <condition property="browser" value="/usr/bin/open">
            <os family="mac" />
        </condition>
        <property environment="env" />
        <condition property="browser" value="${env.BROWSER}">
            <isset property="env.BROWSER" />
        </condition>
        <condition property="browser" value="/usr/bin/firefox">
            <available file="/usr/bin/firefox" />
        </condition>
        <condition property="browser" value="/usr/local/firefox/firefox">
            <available file="/usr/local/firefox/firefox" />
        </condition>
        <condition property="browser" value="/usr/bin/mozilla">
            <available file="/usr/bin/mozilla" />
        </condition>
        <condition property="browser" value="/usr/local/mozilla/mozilla">
            <available file="/usr/local/mozilla/mozilla" />
        </condition>
        <condition property="browser" value="/usr/sfw/lib/firefox/firefox">
            <available file="/usr/sfw/lib/firefox/firefox" />
        </condition>
        <condition property="browser" value="/opt/csw/bin/firefox">
            <available file="/opt/csw/bin/firefox" />
        </condition>
        <condition property="browser" value="/usr/sfw/lib/mozilla/mozilla">
            <available file="/usr/sfw/lib/mozilla/mozilla" />
        </condition>
        <condition property="browser" value="/opt/csw/bin/mozilla">
            <available file="/opt/csw/bin/mozilla" />
        </condition>
    </target>
    <target name="-display-browser-cl" depends="-get-browser" if="do.display.browser.cl">
        <fail unless="browser">
            Browser not found, cannot launch the deployed application. Try to set the BROWSER
            environment variable.
        </fail>
        <property name="browse.url" value="${deploy.ant.client.url}${client.urlPart}" />
        <echo>Launching ${browse.url}</echo>
        <exec executable="${browser}" spawn="true">
            <arg line="${browser.args} ${browse.url}" />
        </exec>
    </target>
    <target name="run-main" depends="init,-init-cos,compile-single">
        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
        <webproject1:java classname="${run.class}" />
    </target>
    <target name="run-test-with-main" depends="init,compile-test-single,-pre-test-run-single">
        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
        <webproject1:java classname="${run.class}" classpath="${run.test.classpath}" />
    </target>
    <target name="-do-update-breakpoints" depends="init" if="netbeans.home">
        <webproject1:nbjpdaappreloaded />
    </target>
    <!--
                DEBUGGING SECTION
            -->
    <target name="debug"
        depends="init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest"
        description="Debug project in IDE." if="netbeans.home">
        <nbstartserver debugmode="true" />
        <antcall target="connect-debugger" />
        <nbdeploy clientUrlPart="${client.urlPart}" debugmode="true" forceRedeploy="true" />
        <antcall target="debug-display-browser-old" />
        <antcall target="debug-display-browser" />
        <antcall target="connect-client-debugger" />
    </target>
    <target name="connect-debugger" if="do.debug.server" unless="is.debugged">
        <condition property="listeningcp" value="sourcepath">
            <istrue value="${j2ee.compile.on.save}" />
        </condition>
        <nbjpdaconnect name="${name}" address="${jpda.address}" host="${jpda.host}"
            listeningcp="${listeningcp}" transport="${jpda.transport}">
            <classpath>
                <path path="${debug.classpath}:${j2ee.platform.classpath}" />
            </classpath>
            <sourcepath>
                <path path="${web.docbase.dir}" />
            </sourcepath>
        </nbjpdaconnect>
    </target>
    <target name="debug-display-browser-old" if="do.display.browser.debug.old">
        <nbbrowse url="${client.url}" />
    </target>
    <target name="debug-display-browser" if="do.display.browser.debug">
        <nbbrowse context="${browser.context}" url="${client.url}" urlPath="${client.urlPart}" />
    </target>
    <target name="connect-client-debugger" if="do.debug.client">
        <webproject1:nbjsdebugstart webUrl="${client.url}" />
    </target>
    <target name="-debug-start-debuggee-main-test" depends="init,compile-test-single"
        if="netbeans.home">
        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
        <webproject1:debug classname="${debug.class}" classpath="${debug.test.classpath}" />
    </target>
    <target name="debug-test-with-main"
        depends="init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test"
        if="netbeans.home" />
    <target name="debug-single" depends="init,compile,compile-jsps,-do-compile-single-jsp,debug"
        if="netbeans.home" />
    <target name="-debug-start-debugger-main-test" depends="init" if="netbeans.home">
        <webproject1:nbjpdastart name="${debug.class}" classpath="${debug.test.classpath}" />
    </target>
    <target name="-debug-start-debugger" depends="init" if="netbeans.home">
        <webproject1:nbjpdastart name="${debug.class}" />
    </target>
    <target name="-debug-start-debuggee-single" depends="init,compile-single" if="netbeans.home">
        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
        <webproject1:debug classname="${debug.class}" />
    </target>
    <target name="debug-single-main"
        depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-single"
        if="netbeans.home" />
    <target name="-pre-debug-fix" depends="init">
        <fail unless="fix.includes">Must set fix.includes</fail>
        <property name="javac.includes" value="${fix.includes}.java" />
    </target>
    <target name="-do-debug-fix" depends="init,-pre-debug-fix,compile-single" if="netbeans.home">
        <webproject1:nbjpdareload />
    </target>
    <target name="debug-fix" depends="init,-pre-debug-fix,-do-debug-fix" if="netbeans.home" />
    <!--
            =================
            PROFILING SECTION
            =================
            -->
    <!--
                pre NB7.2 profiling section; consider it deprecated
            -->
    <target name="-profile-pre72" description="Profile a J2EE project in the IDE."
        if="profiler.info.jvmargs.agent">
        <condition else="start-profiled-server" property="profiler.startserver.target"
            value="start-profiled-server-extraargs">
            <isset property="profiler.info.jvmargs.extra" />
        </condition>
        <antcall target="${profiler.startserver.target}" />
        <antcall target="run" />
        <antcall target="-profile-start-loadgen" />
    </target>
    <target name="start-profiled-server" if="profiler.info.jvmargs.agent">
        <nbstartprofiledserver forceRestart="${profiler.j2ee.serverForceRestart}"
            javaPlatform="${profiler.info.javaPlatform}"
            startupTimeout="${profiler.j2ee.serverStartupTimeout}">
            <jvmarg value="${profiler.info.jvmargs.agent}" />
            <jvmarg value="${profiler.j2ee.agentID}" />
        </nbstartprofiledserver>
    </target>
    <target name="start-profiled-server-extraargs" if="profiler.info.jvmargs.agent">
        <nbstartprofiledserver forceRestart="${profiler.j2ee.serverForceRestart}"
            javaPlatform="${profiler.info.javaPlatform}"
            startupTimeout="${profiler.j2ee.serverStartupTimeout}">
            <jvmarg value="${profiler.info.jvmargs.extra}" />
            <jvmarg value="${profiler.info.jvmargs.agent}" />
            <jvmarg value="${profiler.j2ee.agentID}" />
        </nbstartprofiledserver>
    </target>
    <target name="-profile-test-single-pre72" depends="profile-init,compile-test-single"
        if="profiler.info.jvmargs.agent">
        <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.
        </fail>
        <nbprofiledirect>
            <classpath>
                <path path="${run.test.classpath}" />
                <path path="${j2ee.platform.classpath}" />
            </classpath>
        </nbprofiledirect>
        <junit dir="${profiler.info.dir}" errorproperty="tests.failed"
            failureproperty="tests.failed" fork="true" jvm="${profiler.info.jvm}" showoutput="true">
            <env key="${profiler.info.pathvar}"
                path="${profiler.info.agentpath}:${profiler.current.path}" />
            <jvmarg value="${profiler.info.jvmargs.agent}" />
            <jvmarg line="${profiler.info.jvmargs}" />
            <test name="${profile.class}" />
            <classpath>
                <path path="${run.test.classpath}" />
                <path path="${j2ee.platform.classpath}" />
            </classpath>
            <syspropertyset>
                <propertyref prefix="test-sys-prop." />
                <mapper from="test-sys-prop.*" to="*" type="glob" />
            </syspropertyset>
            <formatter type="brief" usefile="false" />
            <formatter type="xml" />
        </junit>
    </target>
    <target name="-profile-check" if="netbeans.home">
        <condition property="profiler.configured">
            <or>
                <contains casesensitive="true" string="${run.jvmargs.ide}"
                    substring="-agentpath:" />
                <contains casesensitive="true" string="${run.jvmargs.ide}"
                    substring="-javaagent:" />
            </or>
        </condition>
    </target>
    <target name="-do-profile"
        depends="init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest">
        <startprofiler />
        <nbstartserver profilemode="true" />
        <nbdeploy clientUrlPart="${client.urlPart}" forceRedeploy="true" profilemode="true" />
        <antcall target="debug-display-browser-old" />
        <antcall target="debug-display-browser" />
        <antcall target="-profile-start-loadgen" />
    </target>
    <target name="profile" depends="-profile-check,-profile-pre72"
        description="Profile a J2EE project in the IDE." if="profiler.configured"
        unless="profiler.info.jvmargs.agent">
        <antcall target="-do-profile" />
    </target>
    <target name="profile-test-single" depends="-profile-test-single-pre72" />
    <target name="profile-test" depends="-profile-check" if="profiler.configured"
        unless="profiler.info.jvmargs.agent">
        <startprofiler />
        <antcall target="test-single" />
    </target>
    <target name="-profile-start-loadgen" if="profiler.loadgen.path">
        <loadgenstart path="${profiler.loadgen.path}" />
    </target>
    <!--
                JAVADOC SECTION
            -->
    <target name="javadoc-build" depends="init" if="have.sources">
        <mkdir dir="${dist.javadoc.dir}" />
        <javadoc additionalparam="${javadoc.additionalparam}" author="${javadoc.author}"
            charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8"
            encoding="${javadoc.encoding.used}" failonerror="true" noindex="${javadoc.noindex}"
            nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}"
            source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}"
            useexternalfile="true" version="${javadoc.version}"
            windowtitle="${javadoc.windowtitle}">
            <classpath>
                <path path="${javac.classpath}:${j2ee.platform.classpath}" />
            </classpath>
            <fileset dir="${src.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java" />
            </fileset>
            <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
        <copy todir="${dist.javadoc.dir}">
            <fileset dir="${src.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/doc-files/**" />
            </fileset>
            <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">
                <include name="**/doc-files/**" />
            </fileset>
        </copy>
    </target>
    <target name="javadoc-browse" depends="init,javadoc-build" if="netbeans.home"
        unless="no.javadoc.preview">
        <nbbrowse file="${dist.javadoc.dir}/index.html" />
    </target>
    <target name="javadoc" depends="init,javadoc-build,javadoc-browse"
        description="Build Javadoc." />
    <!--
                
                TEST COMPILATION SECTION
            -->
    <target name="-pre-pre-compile-test" depends="init,compile" if="have.tests">
        <mkdir dir="${build.test.classes.dir}" />
        <property name="j2ee.platform.embeddableejb.classpath" value="" />
    </target>
    <target name="-pre-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-compile-test" depends="init,compile,-pre-pre-compile-test,-pre-compile-test"
        if="have.tests">
        <webproject2:javac
            classpath="${javac.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}"
            debug="true" destdir="${build.test.classes.dir}" srcdir="${test.src.dir}" />
        <copy todir="${build.test.classes.dir}">
            <fileset dir="${test.src.dir}" excludes="${build.classes.excludes},${excludes}"
                includes="${includes}" />
        </copy>
    </target>
    <target name="-post-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile-test"
        depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test" />
    <target name="-pre-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-compile-test-single"
        depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single" if="have.tests">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <webproject2:javac
            classpath="${javac.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}"
            debug="true" destdir="${build.test.classes.dir}" excludes=""
            includes="${javac.includes}" srcdir="${test.src.dir}" />
        <copy todir="${build.test.classes.dir}">
            <fileset dir="${test.src.dir}" excludes="${build.classes.excludes},${excludes}"
                includes="${includes}" />
        </copy>
    </target>
    <target name="-post-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile-test-single"
        depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single" />
    <!--
                
                TEST EXECUTION SECTION
            -->
    <target name="-pre-test-run" depends="init" if="have.tests">
        <mkdir dir="${build.test.results.dir}" />
    </target>
    <target name="-do-test-run" depends="init,compile-test,-pre-test-run" if="have.tests">
        <webproject2:test includes="${includes}" testincludes="**/*Test.java" />
    </target>
    <target name="-post-test-run" depends="init,compile-test,-pre-test-run,-do-test-run"
        if="have.tests">
        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details
            above.
        </fail>
    </target>
    <target name="test-report" depends="init" if="have.tests" />
    <target name="-test-browse" depends="init" if="netbeans.home+have.tests" />
    <target name="test"
        depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse"
        description="Run unit tests." />
    <target name="-pre-test-run-single" depends="init" if="have.tests">
        <mkdir dir="${build.test.results.dir}" />
    </target>
    <target name="-do-test-run-single" depends="init,compile-test-single,-pre-test-run-single"
        if="have.tests">
        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
        <webproject2:test excludes="" includes="${test.includes}" testincludes="${test.includes}" />
    </target>
    <target name="-post-test-run-single"
        depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single" if="have.tests">
        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details
            above.
        </fail>
    </target>
    <target name="test-single"
        depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single"
        description="Run single unit test." />
    <target name="-do-test-run-single-method"
        depends="init,compile-test-single,-pre-test-run-single" if="have.tests">
        <fail unless="test.class">Must select some files in the IDE or set test.class</fail>
        <fail unless="test.method">Must select some method in the IDE or set test.method</fail>
        <webproject2:test excludes="" includes="${javac.includes}" testincludes="${test.class}"
            testmethods="${test.method}" />
    </target>
    <target name="-post-test-run-single-method"
        depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method"
        if="have.tests">
        <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details
            above.
        </fail>
    </target>
    <target name="test-single-method"
        depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method"
        description="Run single unit test." />
    <!--
                
                TEST DEBUGGING SECTION
            -->
    <target name="-debug-start-debuggee-test"
        depends="init,compile-test-single,-pre-test-run-single" if="have.tests">
        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
        <webproject2:test-debug excludes="" includes="${javac.includes}" testClass="${test.class}"
            testincludes="${javac.includes}" />
    </target>
    <target name="-debug-start-debuggee-test-method"
        depends="init,compile-test-single,-pre-test-run-single" if="have.tests">
        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
        <fail unless="test.method">Must select some method in the IDE or set test.method</fail>
        <webproject2:test-debug excludes="" includes="${javac.includes}" testClass="${test.class}"
            testMethod="${test.method}" testincludes="${test.class}" testmethods="${test.method}" />
    </target>
    <target name="-debug-start-debugger-test" depends="init,compile-test"
        if="netbeans.home+have.tests">
        <webproject1:nbjpdastart name="${test.class}" classpath="${debug.test.classpath}" />
    </target>
    <target name="debug-test"
        depends="init,compile-test,-debug-start-debugger-test,-debug-start-debuggee-test" />
    <target name="debug-test-method"
        depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method" />
    <target name="-do-debug-fix-test" depends="init,-pre-debug-fix,compile-test-single"
        if="netbeans.home">
        <webproject1:nbjpdareload dir="${build.test.classes.dir}" />
    </target>
    <target name="debug-fix-test" depends="init,-pre-debug-fix,-do-debug-fix-test"
        if="netbeans.home" />
    <!--
                
                CLEANUP SECTION
            -->
    <target name="deps-clean" depends="init" unless="no.deps" />
    <target name="do-clean" depends="init">
        <condition property="build.dir.to.clean" value="${build.web.dir}">
            <isset property="dist.ear.dir" />
        </condition>
        <property name="build.dir.to.clean" value="${build.web.dir}" />
        <delete includeEmptyDirs="true" quiet="true">
            <fileset dir="${build.dir.to.clean}/WEB-INF/lib" />
        </delete>
        <delete dir="${build.dir}" />
        <available file="${build.dir.to.clean}/WEB-INF/lib" property="status.clean-failed"
            type="dir" />
        <delete dir="${dist.dir}" />
    </target>
    <target name="check-clean" depends="do-clean" if="status.clean-failed">
        <echo
            message="Warning: unable to delete some files in ${build.web.dir}/WEB-INF/lib - they are probably locked by the J2EE server. " />
        <echo level="info"
            message="To delete all files undeploy the module from Server Registry in Runtime tab and then use Clean again." />
    </target>
    <target name="undeploy-clean" depends="init" if="netbeans.home">
        <nbundeploy failOnError="false" startServer="false" />
    </target>
    <target name="-post-clean">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="clean" depends="init,undeploy-clean,deps-clean,do-clean,check-clean,-post-clean"
        description="Clean build products." />
    <target name="clean-ear" depends="clean" description="Clean build products." />
</project>
